{
  "version": 3,
  "sources": ["../../src/ChatRenderer.js", "../../src/DiscordOpCodes.js", "../../src/listener.js", "../../src/index.js"],
  "sourcesContent": ["export async function setup() {\n  Hooks.on('renderChatMessage', async (message, html, speaker) => {\n    if (!message.content.includes('d2fvtt-message')) return;\n\n    const el = document.createElement('i');\n    el.classList.add('fa-brands', 'fa-discord');\n    el.title = html.find('.d2fvtt-message').attr('data-discord-channel');\n\n    html\n      .find('header.message-header')\n      .first()\n      .prepend(el);\n  });\n\n  await Promise.all(game.messages.map(async (message) => {\n    if (message.content.includes('d2fvtt-message')) {\n      return message.update();\n    }\n  }));\n}\n", "export default {\n  Hello: 10,\n  Heartbeat: 1,\n  HeartbeatAck: 11,\n  Identify: 2,\n  InvalidSession: 9,\n  Ready: 0,\n  Reconnect: 7,\n  Resume: 6\n};\n", "import OpCodes from './DiscordOpCodes';\nimport { log, MODULE_ID } from './index';\n\nconst config = {\n  encoding: 'json',\n  gatewayUrl: 'wss://gateway.discord.gg',\n  version: 10\n};\nconst State = {\n  Closed: 'closed',\n  Established: 'established',\n  Open: 'open'\n};\n\nexport class Listener extends EventTarget {\n  #client;\n\n  #initialState = {\n    heartbeatAcknowledged: true,\n    heartbeatInterval: -1,\n    gatewayUrl: '',\n    sessionId: '',\n    seq: null,\n    status: State.Closed\n  };\n\n  #toggleControl = {\n    active: false,\n    toggle: true,\n    icon: 'fa-brands fa-discord',\n    name: 'discord',\n    title: `${MODULE_ID}.name`,\n    onClick: this.onToolbarToggle.bind(this)\n  };\n\n  set acceptedChannels(value) {\n    if (!!value) this.acceptedChannelIds = value.split(',');\n    else this.acceptedChannelIds = [];\n  }\n\n  set token(value) {\n    this.close();\n\n    if (value) {\n      this.#client = this.buildClient({ url: config.gatewayUrl, token: value });\n    }\n  }\n\n  constructor() {\n    super();\n\n    this.acceptedChannels = game.settings.get(MODULE_ID, 'discordChannelIds');\n    this.clientState = { ...this.#initialState };\n\n    Hooks.on('getSceneControlButtons', this.addToggleControlBtn.bind(this));\n  }\n\n  addToggleControlBtn(controls) {\n    if (!game.user.isGM) return;\n\n    const bar = controls.find((c) => c.name === 'token');\n    bar?.tools.push(this.#toggleControl);\n  }\n\n  buildClient({ url, token }) {\n    const ws = new WebSocket(`${url}/?v=${config.version}&encoding=${config.encoding}`);\n    ws.addEventListener('open', () => {\n      this.clientState = {\n        ...this.#initialState,\n        gatewayUrl: ws.url,\n        token,\n        status: State.Open\n      };\n    });\n    ws.addEventListener('close', this.onClose.bind(this));\n    ws.addEventListener('error', this.onError.bind(this));\n    ws.addEventListener('message', this.onReceive.bind(this));\n\n    return ws;\n  }\n\n  close(code = 1000, reason = '') {\n    if (this.clientState.hb) {\n      clearInterval(this.clientState.hb);\n    }\n\n    this.#client?.removeEventListener('close', this.onClose);\n    this.#client?.removeEventListener('error', this.onError);\n    this.#client?.removeEventListener('message', this.onReceive);\n    this.#client?.close(code, reason);\n\n    this.clientState = { ...this.#initialState };\n\n    this.#toggleControl.active = false;\n    ui.controls.render();\n  }\n\n  isValidGuildChannel({ channel_id, guild_id }) {\n    if (guild_id !== game.settings.get(MODULE_ID, 'discordGuildId')) return false;\n\n    return this.acceptedChannelIds.length === 0 || !!this.acceptedChannelIds.includes(channel_id);\n  }\n\n  onClose(data) {\n    log('Connection closed', data);\n    this.close();\n\n    if (data.code === 1006) {\n      this.resume(false);\n    }\n  }\n\n  onError(data) {\n    log('Connection error', data);\n  }\n\n  onReceive({ data }) {\n    return new Promise((resolve, reject) => {\n      this._onReceive(JSON.parse(data))\n        .then(resolve)\n        .catch((err) => {\n          log('WS receive error', err);\n          reject(err);\n        });\n    });\n  }\n\n  onToolbarToggle(value) {\n    if (value) {\n      this.#client = this.buildClient({ url: config.gatewayUrl, token: game.settings.get(MODULE_ID, 'discordToken') });\n    } else {\n      this.close();\n    }\n\n    this.#toggleControl.active = value;\n    ui.controls.render();\n  }\n\n  resume(closeFirst = true) {\n    if (closeFirst) {\n      this.close(3000, 'resume');\n    }\n\n    this.#client = this.buildClient({ resume: true, url: this.clientState.gatewayUrl, token: this.clientState.token });\n    this.#client.addEventListener('open', this._sendResume.bind(this));\n  }\n\n  _destroy() {\n    Hooks.off('getSceneControlButtons', this.addToggleControlBtn);\n  }\n\n  async _getRenderContent(message) {\n    const mentions = message.content.matchAll(/(?:<[#@](\\d+)>)+/g);\n    const channels = this.clientState.channels[message.guild_id];\n    const members = this.clientState.members[message.guild_id];\n\n    for (const mention of mentions) {\n      const type = mention[0][1];\n\n      if (type === '@' && members[mention[1]]) {\n        message.content = message.content.replace(mention[0], `<u>@${members[mention[1]].display}</u>`);\n      } else if (type === '#' && channels[mention[1]]) {\n        message.content = message.content.replace(mention[0], `<u>#${channels[mention[1]].name}</u>`);\n      }\n    }\n\n    return renderTemplate(`modules/${MODULE_ID}/static/templates/chat-card.hbs`, {\n      message,\n      attachments: message.attachments.map((a) => ({\n        filename: a.filename,\n        image: a.content_type?.startsWith('image') ?? false,\n        url: a.url,\n        video: a.content_type?.startsWith('video') ?? false\n      })),\n      channel: this.clientState.channels[message.guild_id][message.channel_id]?.name,\n      content: message.content\n    });\n  }\n\n  _onGuildJoin(data) {\n    this.clientState.channels ??= {};\n    this.clientState.channels[data.id] = data.channels\n      .filter((c) => c.type === 0)\n      .reduce((curr, val) => ({ ...curr, [val.id]: { name: val.name, type: val.type } }), {});\n\n    this.clientState.members ??= {};\n    this.clientState.members[data.id] = data.members\n      .filter((u) => !u.pending)\n      .reduce(\n        (curr, val) => ({\n          ...curr,\n          [val.user.id]: {\n            avatarId: val.avatar ?? val.user.avatar,\n            display: val.nick ?? val.user.display_name ?? val.user.username,\n            username: val.user.username\n          }\n        }),\n        {}\n      );\n  }\n\n  async _onMessageCreated(data) {\n    const fvttUser = game.users.find((u) => u.getFlag(MODULE_ID, 'did') === data.author.username);\n    return ChatMessage.create({\n      author: fvttUser?.id,\n      content: await this._getRenderContent(data),\n      flags: {\n        [MODULE_ID]: {\n          managed: true,\n          messageId: data.id\n        }\n      },\n      speaker: { actor: fvttUser?.character, alias: fvttUser?.character?.name ?? fvttUser?.name ?? data?.member?.nick ?? data?.author?.username },\n      style: 1\n    });\n  }\n\n  async _onMessageDeleted(data) {\n    const msg = game.messages.find((m) => m.getFlag(MODULE_ID, 'messageId') === data.id);\n    if (!msg) return Promise.resolve();\n\n    return !!game.settings.get(MODULE_ID, 'preserveDeletedMessages')\n      ? msg.update({\n          content: msg.content.replace('class=\"d2fvtt-message\"', 'class=\"d2fvtt-message deleted\"')\n        })\n      : msg.delete();\n  }\n\n  async _onMessageUpdated(data) {\n    const msg = game.messages.find((m) => m.getFlag(MODULE_ID, 'messageId') === data.id);\n    if (!msg) return Promise.resolve();\n\n    return msg.update({ content: await this._getRenderContent(data) });\n  }\n\n  async _onReceive(data) {\n    log('Received message (hi)', data);\n    const { d, op, s, t } = data;\n\n    switch (op) {\n      case OpCodes.Hello:\n        this.clientState.heartbeatInterval = d.heartbeat_interval;\n\n        setTimeout(() => {\n          this._sendHeartbeat();\n          this.clientState.hb = setInterval(this._sendHeartbeat.bind(this), this.clientState.heartbeatInterval);\n        }, this.clientState.heartbeatInterval * Math.random());\n\n        this._sendIdentify();\n\n        break;\n      case OpCodes.Heartbeat:\n        this._sendHeartbeat();\n        break;\n      case OpCodes.HeartbeatAck:\n        this.clientState.heartbeatAcknowledged = true;\n\n        if (this.clientState.status === 'open') {\n          this._sendIdentify();\n        }\n\n        break;\n      case OpCodes.InvalidSession:\n        if (!d) {\n          this.close();\n          this.#client = this.buildClient({ url: config.gatewayUrl, token: this.clientState.token });\n        } else {\n          this.resume();\n        }\n\n        break;\n      case OpCodes.Ready:\n        if (t === 'READY') {\n          this.clientState.gatewayUrl = d.resume_gateway_url ?? this.clientState.gatewayUrl;\n          this.clientState.sessionId = d.session_id ?? this.clientState.sessionId;\n          this.clientState.seq = s ?? this.clientState.seq;\n          this.clientState.status = 'ready';\n\n          this.#toggleControl.active = true;\n          ui.controls.render();\n        }\n\n        break;\n      case OpCodes.Reconnect:\n        this.resume();\n        break;\n    }\n\n    if (this.clientState.status !== 'ready') return;\n    \t  \n    if (t === 'GUILD_CREATE') {\n      this._onGuildJoin(d);\n    } else {\n      if (!d || !this.isValidGuildChannel(d)) return;\n\n      switch (t) {\n        case 'MESSAGE_CREATE':\n          return this._onMessageCreated(d);\n        case 'MESSAGE_UPDATE':\n          return this._onMessageUpdated(d);\n        case 'MESSAGE_DELETE':\n          return this._onMessageDeleted(d);\n      }\n    }\n  }\n\n  _sendHeartbeat() {\n    if (this.#client && this.#client.readyState === WebSocket.OPEN) {\n      if (this.clientState.status === 'ready' && !this.clientState.heartbeatAcknowledged) {\n        this.close();\n        this.resume();\n      } else {\n        this.clientState.heartbeatAcknowledged = false;\n        this.#client.send(JSON.stringify({ op: OpCodes.Heartbeat, d: this.clientState.seq }));\n      }\n    }\n  }\n\n  _sendIdentify() {\n    this.#client.send(\n      JSON.stringify({\n        op: OpCodes.Identify,\n        d: {\n          intents: (1 << 0) | (1 << 8) | (1 << 9) | (1 << 15),\n          properties: {\n            browser: window.navigator.userAgent,\n            device: 'DiscordToFVTT'\n          },\n          token: this.clientState.token\n        }\n      })\n    );\n  }\n\n  _sendResume() {\n    this.#client.removeEventListener('open', this._sendResume);\n    this.#client.send(\n      JSON.stringify({\n        op: OpCodes.Resume,\n        d: {\n          session_id: this.clientState.sessionId,\n          seq: this.clientState.seq,\n          token: this.clientState.token\n        }\n      })\n    );\n  }\n}\n", "import * as ChatRenderer from './ChatRenderer';\nimport { Listener } from './listener';\n\nexport const MODULE_ID = 'discord-to-fvtt';\nexport const log = (message, ...args) => console.log(MODULE_ID, '|', message, ...args);\n\nlet listener;\n\nHooks.once('setup', () => {\n  game.settings.register(MODULE_ID, 'discordGuildId', {\n    name: 'Discord Server ID',\n    hint: 'Enter your Discord server ID.',\n    config: true,\n    requiresReload: false,\n    scope: 'world',\n    type: String\n  });\n  game.settings.register(MODULE_ID, 'discordChannelIds', {\n    name: 'Discord Channel IDs',\n    hint: 'Enter a list of channel ID filters, separated by commas. Leave this blank to relay all accessible channels.',\n    config: true,\n    requiresReload: false,\n    scope: 'world',\n    type: String,\n    onChange: (value) => (listener.acceptedChannels = value)\n  });\n  game.settings.register(MODULE_ID, 'discordToken', {\n    name: 'Discord Token',\n    hint: 'Enter your Discord bot token if you want to use your own bot.',\n    config: true,\n    requiresReload: false,\n    scope: 'world',\n    type: String,\n    onChange: (value) => (listener.token = value)\n  });\n  game.settings.register(MODULE_ID, 'preserveDeletedMessages', {\n    name: 'Preserve Messages',\n    hint: 'Should deleted messages be preserved in the chat log (with a strike-through)?',\n    config: true,\n    requiresReload: false,\n    scope: 'world',\n    type: Boolean\n  });\n\n  ChatRenderer.setup().catch((err) => console.error(MODULE_ID, { error: err }));\n  listener = new Listener();\n});\n\nHooks.once('ready', () => {\n  if (!game.users.activeGM.isSelf) return;\n  listener.token = game.settings.get(MODULE_ID, 'discordToken');\n});\n\nconst userConfigSectionBySystem = {\n  'default': 'section.window-content > div footer',\n  'pf2e': 'section.tab[data-tab=core] > div footer',\n  'pirateborg': 'section.window-content > div fieldset:last-child'\n};\n\nHooks.on('renderUserConfig', (app, html) => {\n  const did = app.document.flags[MODULE_ID]?.did ?? '';\n  const input = `\n    <fieldset>\n      <legend>${game.i18n.localize(`${MODULE_ID}.name`)}</legend>\n      <div class='form-group'>\n        <div class='form-fields'>\n          <input type='text' name='flags.${MODULE_ID}.did' value='${did}' placeholder='Discord User ID'>\n        </div>\n        <p class='hint'>${game.i18n.localize(`${MODULE_ID}.userConfigurationHint`)}</p>\n      </div>\n    </fieldset>`;\n  html.querySelector(userConfigSectionBySystem[game.system.id] ?? userConfigSectionBySystem.default).insertAdjacentHTML('beforebegin', input);\n});\n"],
  "mappings": "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",
  "names": ["setup", "message", "html", "speaker", "el", "__name", "DiscordOpCodes_default", "config", "State", "Listener", "__name", "#client", "#initialState", "#toggleControl", "MODULE_ID", "value", "controls", "c", "url", "token", "ws", "code", "reason", "channel_id", "guild_id", "data", "log", "resolve", "reject", "err", "closeFirst", "message", "mentions", "channels", "members", "mention", "type", "curr", "val", "u", "fvttUser", "msg", "m", "d", "op", "s", "t", "DiscordOpCodes_default", "MODULE_ID", "log", "__name", "message", "args", "listener", "value", "setup", "err", "Listener", "userConfigSectionBySystem", "app", "html", "did", "input"]
}
